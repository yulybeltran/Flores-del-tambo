{"version":3,"sources":["apis/index.js","components/Form.js","components/Section.js","components/Todo.js","components/List.js","assets/Logoflor.png","components/Modal.js","components/Searchbar.js","components/Navbar.js","App.js","index.js"],"names":["axios","create","baseURL","Form","addTodo","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","title","completed","deleted","id","value","onChange","target","type","placeholder","Section","children","style","margin","Todo","editTodoItemProp","removeTodoItemProp","isEditing","setIsEditing","setValue","tempValue","setTempValue","completedState","setCompleted","onKeyDown","key","keyCode","autoFocus","onDoubleClick","onClick","oldCompleted","newState","List","list","removeTodoListProp","editTodoListProp","renderedList","filter","item","map","_id","updatedItem","Modal","status","setOpenModal","prevState","index","Searchbar","task","setTask","Navbar","openModal","modalInfo","setModalInfo","handleModal","statusTitle","statusClick","src","logo","alt","App","todoList","setTodoList","useEffect","a","todos","get","data","fetchData","post","oldList","removeTodo","delete","editTodo","put","filteredTasks","toLowerCase","normalize","replace","includes","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.728ce0a4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:3030\",\n});\n","import React, { useState } from \"react\";\nimport \"../styles/form.css\"\n\n\nconst Form = ({ addTodo }) => {\n    //Declaramos el estado de el input\n    const [inputValue, setInputValue] = useState(\"\");\n    //Esta constante se usa para modificar el state\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n    //Aca utilizamos el preventDefault para evita que la pagina se recargue\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n    //El .trim se usa para borrar espacios en blanco alrededor de el string\n        if(inputValue.trim() === \"\") return;\n\n        addTodo({ title: inputValue, completed: false, deleted: false });\n        // Aca devolvemos el estado de el input a un string vacio    \n        setInputValue(\"\");\n    };\n    \n    return (\n        <form className=\"ui form\" \n        //Es usado para procesar la informacion de el formulario y luego poder ser enviado, le pasamos la funcion\n        // handleFormSubmit para evitar que la informacion se refresque y se pierda\n        onSubmit={handleFormSubmit}>\n            <div className=\"ui grid center aligned\">\n                <div className=\"row input-button\">\n                    <div className=\"column five wide\" id=\"inputForm\">\n                        <input\n                            //Aqui le pasamos los estados al input \n                            value={inputValue}\n                            onChange={handleInputChange}\n                            type=\"text\"\n                            placeholder=\"Ingresa la tarea que debes realizar...\"\n                        />\n                    </div>\n                     <div className=\"column one wide\">\n                        <button type=\"submit\" className=\"ui button circular icon green\"><i className=\"white plus icon\" ></i></button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default Form;","import React from \"react\";\n\nconst Section = ({ children }) => {\n    return (\n        <div style={{ margin: \"50px\"}}>\n            {children}\n        </div>\n    );\n}; \n//Usamos los children para pasar las propiedades de el return como un componente\n\nexport default Section;","import React, { useState } from \"react\";\nimport \"../styles/todo.css\"\nimport {IoMdFlower} from \"react-icons/io\"\n\nconst Todo = ({ title, completed, removeTodoItemProp, editTodoItemProp, deleted }) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [value, setValue] = useState(title);\n    const [tempValue, setTempValue] = useState(title);\n    const [completedState, setCompleted] = useState(completed);\n\n    const handleDivDoubleClick = () => {\n        setIsEditing(true);\n    };\n    //Esta constante la usamos para definir la funciones de las teclas al momento de editar\n    const handleInputKeyDown = (e) => {\n        const key = e.keyCode;\n        //Si presionamos enter se cambia el valor de el nuevo \n        if (key === 13) {\n            editTodoItemProp({ title: tempValue });\n            setValue(tempValue);\n            setIsEditing(false);\n        } else if (key === 27) {\n            setTempValue(value);\n            setIsEditing(false);\n        }\n    };\n\n    const handleInputOnChange = (e) => {\n        setTempValue(e.target.value);\n    };\n    const handleDeleteClick = () =>\n        editTodoItemProp({ deleted: !deleted });\n\n    const handleButtonClick = () => {\n        setCompleted((oldCompleted) => {\n            const newState = !oldCompleted;\n            editTodoItemProp({ completed: newState });\n            return newState;\n        });\n    };\n\n    return (\n        <div className=\"row\">\n            {\n                isEditing ?\n                    <div className=\"column seven wide\">\n                        <i className=\"certificate icon\"></i>\n                        <div className=\"ui input fluid\">\n\n                            <input\n                                onChange={handleInputOnChange}\n                                onKeyDown={handleInputKeyDown}\n                                autoFocus={true}\n                                value={tempValue}\n                            />\n                        </div>\n                    </div> :\n                    <>\n                        <div className=\"column five wide \" onDoubleClick={handleDivDoubleClick}>\n                            <h2\n                                className={\"ui header\"}\n                                id={completedState ? \"completedTodo\" : \"\"}\n                            > <IoMdFlower className=\"prueba\" id=\"flower-list\"/> \n                                {value}\n                            </h2>\n                        </div>\n                        <div className=\"butons\">\n                            <div className=\"column one wide\">\n                                <button\n                                    className={\"ui button circular icon\" + (completedState ? \" blue\" : \" green\")}\n                                    onClick={handleButtonClick}\n                                >\n                                    <i className=\"white check icon\"></i>\n                                </button>\n                            </div>\n\n                            <div className=\"column one wide\">\n                                <button\n                                    onClick={handleDeleteClick}\n                                    className=\"ui button circular icon red\"\n                                >\n                                    <i className=\"white remove icon\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </>\n            }\n        </div>\n    );\n};\n\nexport default Todo;","import React from \"react\";\nimport Todo from \"./Todo\";\n\nconst List = ({ list, removeTodoListProp, editTodoListProp }) => {\n  const renderedList = list\n    .filter((item) => !item.deleted)\n    .map((item) => (\n      <Todo\n        title={item.title}\n        completed={item.completed}\n        deleted={item.deleted}\n        removeTodoItemProp={(e) => removeTodoListProp(item._id)}\n        editTodoItemProp={(updatedItem) =>\n          editTodoListProp(item._id, updatedItem)\n        }\n        key={item._id}\n      />\n    ));\n  return (\n    <>\n      <div className=\"ui grid center aligned\">{renderedList}</div>\n    </>\n  );\n};\n\nexport default List;\n","export default __webpack_public_path__ + \"static/media/Logoflor.0ec2db6a.png\";","\nimport React from 'react';\nimport \"../styles/modal.css\"\nimport { IoMdFlower } from \"react-icons/io\"\nimport { IoIosClose } from \"react-icons/io\"\n\nexport const Modal= ({title, list, status, setOpenModal}) => {\n  // Filter items according to the status (completed or deleted)\n    const filter=  list.filter(item => item[status])\n  return (\n    <div className='modal'>\n      <div className='containerModal'>\n        <div className='containerTitle'>\n          <button className='close' onClick={() => setOpenModal(prevState => !prevState)}> <IoIosClose /> </button>\n          <h2 id=\"title\" className={status === \"deleted\" ? \"iconColor-deleted\" : \"iconColor-completed\"}>{title}</h2>\n        </div>\n        <div className='modalFil'>\n          <div className='modalFilter'>{filter.map((item, index) =>\n            <p key={index}><span><IoMdFlower className={status === \"deleted\" ? \"iconColor-deleted\" : \"iconColor-completed\"} /> </span>{item.title}</p>)}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport const Searchbar = ({onChange, task, setTask}) => {\n  \n  const handleSubmit = (e) => {\n    e.preventDefault(); // avoid reloading whole page\n    onChange(task); //value typed by user \n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Buscar tarea...\"\n          value={task}\n          onChange={(e) => setTask(e.target.value)}\n        />\n      </form>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { BsListCheck } from \"react-icons/bs\";\nimport { MdDelete } from \"react-icons/md\";\nimport \"../styles/navbar.css\";\nimport logo from \"../assets/Logoflor.png\";\nimport { Modal } from \"./Modal.js\";\nimport { Searchbar } from \"./Searchbar\";\n\n\nconst Navbar = ({ list, task, setTask }) => {\n  // Handle if the modal is shown or not \n  const [openModal, setOpenModal] = useState(false);\n\n// Handle information to be displayed in the modal \n  const [modalInfo, setModalInfo] = useState({ title: \"\", status: \"\" });\n\n// Depending on the selected button,show modal and establish the information to be displayed \n  const handleModal = (statusTitle, statusClick) => {\n    setOpenModal(!openModal);\n    setModalInfo({ title: statusTitle, status: statusClick });\n  };\n  return (\n    <div className=\"navbar\">\n      <div className=\"nav\">\n        <h1>Flores del Tambo</h1>\n        <div>\n        {/* Props from app to handle the value the user types */} \n          <Searchbar task={task} setTask={setTask} />\n        </div>\n        <div className=\"icons\">\n          <BsListCheck\n            onClick={() => handleModal(\"Tareas Completadas\", \"completed\")}\n          />\n          <MdDelete\n            onClick={() => handleModal(\"Tareas Eliminadas\", \"deleted\")}\n          />\n        </div>\n      </div>\n      <img src={logo} alt={logo} />\n      <p>\n        El éxito es la suma de pequeños esfuerzos repetidos un día sí y otro\n        también.{\" \"}\n      </p>\n        {/* If the modal is shown, display the information*/} \n      {openModal ? (\n        <Modal\n          setOpenModal={setOpenModal}\n          title={modalInfo.title}\n          status={modalInfo.status}\n          list={list}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport todos from \"./apis\";\nimport \"./styles/app.css\";\nimport Form from \"./components/Form\";\nimport Section from \"./components/Section\";\nimport List from \"./components/List\";\nimport Navbar from \"./components/Navbar\";\n\nconst appTitle = \"Lista de tareas\";\n\nconst App = () => {\n  // Handle list to render\n  const [todoList, setTodoList] = useState([]);\n// Handle filtered list to render \n  const [task, setTask] = useState(\"\");\n\n\n  // Get data from api\n  useEffect(() => {\n    async function fetchData() {\n      const { data } = await todos.get(\"/todos\");\n      setTodoList(data);\n    }\n    fetchData();\n  }, [todoList]);\n\n  // Add new items \n  const addTodo = async (item) => {\n    const { data } = await todos.post(\"/todos\", item);\n    setTodoList((oldList) => [...oldList, data]);\n  };\n\n  // Remove item depending on its id\n  const removeTodo = async (id) => {\n    await todos.delete(`/todos/${id}`);\n    setTodoList((oldList) => oldList.filter((item) => item._id !== id));\n  };\n\n    // Edit item depending on its id and the information to be updated \n  const editTodo = async (id, item) => {\n    await todos.put(`/todos/${id}`, item);\n  };\n\n  /* \n  Filter list depending on what the user types\n  Validations for capitalization and diacritical accents \n  */\n  const filteredTasks = todoList.filter((item) => {\n    return item.title\n      .toLowerCase()\n      .normalize(\"NFD\")\n      .replace(/[\\u0300-\\u036f]/g, \"\")\n      .includes(\n        task\n          .toLowerCase()\n          .normalize(\"NFD\")\n          .replace(/[\\u0300-\\u036f]/g, \"\")\n      );\n  });\n\n  return (\n    <div className=\"container\">\n    \n      <Navbar list={todoList} task={task} setTask={setTask}       />\n      <Section>\n        <h1>{appTitle}</h1>\n      </Section>\n\n      <Section>\n        <Form addTodo={addTodo} />\n      </Section>\n\n      <Section>\n        <List\n          editTodoListProp={editTodo}\n          removeTodoListProp={removeTodo}\n          list={task ? filteredTasks : todoList} \n          //If user types something on searchbar pass filtered items, otherwise pass full list\n        />\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}